// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerAppDev_Final_Project.Models;

namespace WebServerAppDev_Final_Project.Migrations
{
    [DbContext(typeof(FishContext))]
    partial class FishContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Pan Fish"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Bass"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Sucker Fish"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Catfish"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Trout"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Pike"
                        },
                        new
                        {
                            CategoryId = 7,
                            Name = "Salmon"
                        },
                        new
                        {
                            CategoryId = 8,
                            Name = "Drum"
                        },
                        new
                        {
                            CategoryId = 9,
                            Name = "Saltwater"
                        });
                });

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Fish", b =>
                {
                    b.Property<int>("FishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Difficulty")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("FishId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.ToTable("Fish");

                    b.HasData(
                        new
                        {
                            FishId = 1,
                            CategoryId = 2,
                            Difficulty = 2,
                            LocationId = 1,
                            Name = "Largemouth Bass"
                        },
                        new
                        {
                            FishId = 2,
                            CategoryId = 2,
                            Difficulty = 2,
                            LocationId = 2,
                            Name = "Smallmouth Bass"
                        },
                        new
                        {
                            FishId = 4,
                            CategoryId = 1,
                            Difficulty = 1,
                            LocationId = 1,
                            Name = "Sunfish"
                        },
                        new
                        {
                            FishId = 5,
                            CategoryId = 1,
                            Difficulty = 1,
                            LocationId = 1,
                            Name = "Crappie"
                        },
                        new
                        {
                            FishId = 6,
                            CategoryId = 3,
                            Difficulty = 1,
                            LocationId = 3,
                            Name = "Sucker"
                        },
                        new
                        {
                            FishId = 7,
                            CategoryId = 3,
                            Difficulty = 4,
                            LocationId = 2,
                            Name = "Lake Sturgeon"
                        },
                        new
                        {
                            FishId = 8,
                            CategoryId = 4,
                            Difficulty = 2,
                            LocationId = 2,
                            Name = "Channel Catfish"
                        },
                        new
                        {
                            FishId = 9,
                            CategoryId = 5,
                            Difficulty = 4,
                            LocationId = 4,
                            Name = "Steelhead Trout"
                        },
                        new
                        {
                            FishId = 10,
                            CategoryId = 8,
                            Difficulty = 2,
                            LocationId = 2,
                            Name = "Sheephead"
                        });
                });

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Name = "Pond"
                        },
                        new
                        {
                            LocationId = 2,
                            Name = "Lake"
                        },
                        new
                        {
                            LocationId = 3,
                            Name = "River"
                        },
                        new
                        {
                            LocationId = 4,
                            Name = "Stream"
                        },
                        new
                        {
                            LocationId = 5,
                            Name = "Ocean"
                        });
                });

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Fish", b =>
                {
                    b.HasOne("WebServerAppDev_Final_Project.Models.Category", "Category")
                        .WithMany("Fish")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServerAppDev_Final_Project.Models.Location", "Location")
                        .WithMany("Fish")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Category", b =>
                {
                    b.Navigation("Fish");
                });

            modelBuilder.Entity("WebServerAppDev_Final_Project.Models.Location", b =>
                {
                    b.Navigation("Fish");
                });
#pragma warning restore 612, 618
        }
    }
}
